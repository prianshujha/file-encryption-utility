name: Java CI with Maven

# Trigger the workflow on push or pull request events
on:
  push:
    branches:
      - main  # Trigger on push to the 'main' branch
  pull_request:
    branches:
      - main  # Trigger on PR to the 'main' branch

jobs:
  build:
    runs-on: ubuntu-latest  # The latest Ubuntu environment provided by GitHub Actions

    steps:
      # Checkout the code from the repository
      - name: Checkout code
        uses: actions/checkout@v2

      # Set up Java JDK (version 11 or another version based on your project requirements)
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'

      # Cache Maven dependencies to speed up the build process
      - name: Cache Maven dependencies
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository  # Maven local repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      # Build the project using Maven
      - name: Build with Maven
        run: mvn clean install -DskipTests=true

      # Run unit tests (optional, if you have tests)
      - name: Run tests with Maven
        run: mvn test

      # Package the project (optional, if you want to package the .jar file)
      - name: Package the application
        run: mvn package

      # Optionally, deploy the packaged application (this step can be configured for your deployment needs)
      # For example, you can deploy to an artifact repository or a cloud provider
